pipeline {
    agent any

    environment {
        BASE_URL = credentials('xfit_base_url') //
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üîÑ –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è'
                checkout scm
            }
        }

        stage('Install & Run Tests') {
            steps {
                echo 'üêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤'
                sh '''
                    # –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
                    python3 -m venv .venv
                    . .venv/bin/activate

                    # –û–±–Ω–æ–≤–ª—è–µ–º pip –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
                    pip install --upgrade pip
                    pip install -r requirements.txt

                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º .env —Å Jenkins BASE_URL
                    echo "BASE_URL=$BASE_URL" > .env

                    echo 'üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—à–ª—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ Allure'
                    rm -rf allure-results

                    echo 'üöÄ –ó–∞–ø—É—Å–∫ pytest —Å –≤—ã–≤–æ–¥–æ–º –∏ allure'
                    pytest tests/ --alluredir=allure-results --disable-warnings --maxfail=1 -v
                '''
            }
        }

        stage('Allure Report') {
            steps {
                echo 'üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Allure –æ—Ç—á–µ—Ç–∞'
                allure([
                    includeProperties: false,
                    jdk: '',
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'allure-results']]
                ])
            }
        }
    }

    post {
        always {
            echo 'üßπ –û—á–∏—Å—Ç–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ .venv'
            sh 'rm -rf .venv'
        }

        failure {
            echo '‚ùå –°–±–æ—Ä–∫–∞ —É–ø–∞–ª–∞. –ü—Ä–æ–≤–µ—Ä—å –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö'
        }
    }
}
